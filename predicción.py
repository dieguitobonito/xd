# -*- coding: utf-8 -*-
"""Predicción.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ruTXg1Qnkd3FeeMhURfP1VHP7aRO0jzZ
"""

import pandas as pd
from prophet import Prophet
import matplotlib.pyplot as plt

# Cargar archivo con datos de 2024
df = pd.read_csv("/ventas_.csv")  # Ajusta la ruta si es necesario

# Asegurar que la columna 'fecha' esté en formato datetime
df['fecha'] = pd.to_datetime(df['fecha'], dayfirst=True)

# Agrupar por fecha sumando unidades vendidas
df_diario = df.groupby('fecha').agg({'unidades_vendidas': 'sum'}).reset_index()

# Renombrar columnas como exige Prophet
df_diario.rename(columns={'fecha': 'ds', 'unidades_vendidas': 'y'}, inplace=True)

# Crear modelo Prophet con estacionalidades mejoradas
modelo = Prophet(
    daily_seasonality=False,
    weekly_seasonality=True,
    yearly_seasonality=True
)

# Estacionalidad mensual personalizada (aprox. cada 30.5 días)
modelo.add_seasonality(name='mensual', period=30.5, fourier_order=5)

# Entrenar el modelo
modelo.fit(df_diario)

# Generar fechas futuras para todo 2025
futuro = modelo.make_future_dataframe(periods=365)

# Realizar predicción
forecast = modelo.predict(futuro)

# Filtrar solo el año 2025
forecast_2025 = forecast[(forecast['ds'] >= '2025-01-01') & (forecast['ds'] <= '2025-12-31')]

# Graficar resultados
plt.figure(figsize=(12, 6))
plt.plot(df_diario['ds'], df_diario['y'], label='Ventas reales (2024)')
plt.plot(forecast_2025['ds'], forecast_2025['yhat'], label='Predicción 2025', color='orange')
plt.fill_between(forecast_2025['ds'], forecast_2025['yhat_lower'], forecast_2025['yhat_upper'], alpha=0.3, color='orange')
plt.title("Predicción de ventas para 2025")
plt.xlabel("Fecha")
plt.ylabel("Unidades vendidas")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()